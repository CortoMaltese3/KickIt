@model TeamProject.Models.Court

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "Courts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Court Edit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.BranchId, "BranchId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BranchId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxPlayers, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxPlayers, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxPlayers, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ImageCourt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="imagefile" />
            @Html.ValidationMessageFor(model => model.ImageCourt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-secondary" />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Back to Courts", "Index",new { id=Model.BranchId})
</div>
<hr />
<h2>Timeslots</h2>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TimeSlot.FirstOrDefault().DayName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeSlot.FirstOrDefault().Hour)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeSlot.FirstOrDefault().Duration)
        </th>
    </tr>

    @foreach (var item in Model.TimeSlot)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DayName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hour)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
        </tr>
    }

</table>
<div>
    @Html.ActionLink("Edit TimeSlots", "Index", "Timeslots", new { id = Model.Id }, null)
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
