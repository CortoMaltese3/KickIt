@model IEnumerable<TeamProject.Models.Court>
@{
    ViewBag.Title = "Reports";
}
<h2 class="text-center">Total bookings by week day</h2>

<div class="card m-3 shadow-sm">
    <div class="card-header">
        Branch Total <small class="text-muted">@Model.FirstOrDefault().Branch.Name</small>
    </div>
    <div class="card-body">
        <canvas id="pie-BranchBookingsByWeekDay-@Model.FirstOrDefault().BranchId"></canvas>
    </div>
</div>

@foreach (var court in Model)
{
    <div class="card m-3 shadow-sm">
        <div class="card-header">
            Court Total <small class="text-muted">@court.Name</small>
        </div>
        <div class="card-body">
            <canvas id="pie-CourtBookingsByWeekDay-@court.Id"></canvas>
        </div>
    </div>
}

<h2 class="text-center">Total bookings last six months</h2>
<div class="card m-3 shadow-sm">
    <div class="card-header">
        Branch Total <small class="text-muted">@Model.FirstOrDefault().Branch.Name</small>
    </div>
    <div class="card-body">
        <canvas id="bar-BranchPricesByMonth-@Model.FirstOrDefault().BranchId"></canvas>
    </div>
</div>

@foreach (var court in Model)
{
    <div class="card m-3 shadow-sm">
        <div class="card-header">
            Court Total <small class="text-muted">@court.Name</small>
        </div>
        <div class="card-body">
            <canvas id="bar-CourtPricesByMonth-@court.Id"></canvas>
        </div>
    </div>
}

@section scripts{
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.7.1/js/mdb.min.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script>
        $(document).ready(function () {

            updateChartData(@Model.FirstOrDefault().BranchId, showPieChart, 'BranchBookingsByWeekDay');
            updateChartData(@Model.FirstOrDefault().BranchId, showBarChart, 'BranchPricesByMonth');

            @foreach (var court in Model)
            {
                @Html.Raw($"updateChartData({court.Id}, showPieChart, 'CourtBookingsByWeekDay');\n");
                @Html.Raw($"updateChartData({court.Id}, showBarChart, 'CourtPricesByMonth');\n");
            }

            function updateChartData(id, showChart, apiService) {

                $.getJSON(`/api/bookings/Get${apiService}/${id}`, {
                    fromDate: moment().subtract(6, 'months').utc().format(),
                    toDate: moment().utc().format()
                })
                    .done(function (data) {
                        const chartLabels = Object.keys(data);
                        const chartData = Object.values(data);

                        showChart(`${apiService}-${id}`, chartLabels, chartData);
                    });
            }

            function showPieChart(chartElement, labels, data) {

                var ctxD = document.getElementById(`pie-${chartElement}`).getContext('2d');
                var myLineChart = new Chart(ctxD, {
                    type: 'doughnut',
                    data: {
                        labels: labels,
                        datasets: [{
                            data: data,
                            backgroundColor: ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1", "#4D5360", "#CCAE8F", "#AFB2CB"],
                            hoverBackgroundColor: ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5", "#616774", "#4C2E0F","#232A5E"]
                        }]
                    },
                    options: {
                        responsive: true
                    }
                });
            }

            function showBarChart(chartElement, labels, data) {
                var ctxB = document.getElementById(`bar-${chartElement}`).getContext('2d');
                  var myBarChart = new Chart(ctxB, {
                    type: 'bar',
                    data: {
                        labels: labels,
                      datasets: [{
                        label: '# of Monthly Price',
                          data: data,
                        backgroundColor: [
                          'rgba(255, 99, 132, 0.2)',
                          'rgba(54, 162, 235, 0.2)',
                          'rgba(255, 206, 86, 0.2)',
                          'rgba(75, 192, 192, 0.2)',
                          'rgba(153, 102, 255, 0.2)',
                          'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                          'rgba(255,99,132,1)',
                          'rgba(54, 162, 235, 1)',
                          'rgba(255, 206, 86, 1)',
                          'rgba(75, 192, 192, 1)',
                          'rgba(153, 102, 255, 1)',
                          'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                      }]
                    },
                    options: {
                      scales: {
                        yAxes: [{
                          ticks: {
                            beginAtZero: true
                          }
                        }]
                      }
                    }
                  });
            }
        });
    </script>

}

